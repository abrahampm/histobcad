name: Build and Release App

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Generate app version
        id: version
        shell: bash
        run: |
          TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          COMMIT=$(git rev-parse --short HEAD)
          if [ "$(git describe --tags --exact-match 2>/dev/null || echo '')" = "$TAG" ]; then
            VERSION="$TAG"
          else
            VERSION="${TAG}-${COMMIT}"
          fi
          echo "version=${VERSION}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build app
        run: |
          pyinstaller main.spec

      - name: Archive windows artifacts
        if: ${{ matrix.os == 'windows-latest' }}
        run: tar -cvzf slidesimple-windows.tar.gz dist/SlideSimple.exe

      - name: Archive ubuntu artifacts
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: tar -cvzf slidesimple-linux.tar.gz dist/SlideSimple

      - name: Archive macos artifacts
        if: ${{ matrix.os == 'macos-latest' }}
        run: tar -cvzf slidesimple-macos.tar.gz dist/SlideSimple

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.version }}
          release_name: ${{ env.version }}
          body: |
            Automated release created by GitHub Actions.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets (windows)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: slidesimple-windows.tar.gz
          asset_name: slidesimple-windows.tar.gz
          asset_content_type: application/gzip

      - name: Upload release assets (linux)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: slidesimple-linux.tar.gz
          asset_name: slidesimple-linux.tar.gz
          asset_content_type: application/gzip

      - name: Upload release assets (macos)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: slidesimple-macos.tar.gz
          asset_name: slidesimple-macos.tar.gz
          asset_content_type: application/gzip